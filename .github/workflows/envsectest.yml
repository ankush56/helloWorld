###############################################################
# Environment secrets take precendence to repository secrets
# You can have same name secret set up in repo settings under environment and repo secrets
# If secret set under dev env, and environment used is dev it will use that if u have same name secret in repo secrets
# We can also have protection rules under each environment, like requiring approval to deploy in prod by certain perople
# or Fail deploy if target branch is not master or release etc
###########################################################
name: Environments and Secret Test
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DEV_URL: "https://docs.github.com/en/developers"
  PROD_URL: "https://docs.github.com/"
  DEV_CONFIG: "abcsnapshot"
  PROD_CONFIG: "abcrelease"


jobs:
  job1-DEV:
    runs-on: ubuntu-latest
    # An environment can be specified per job
    # If the environment cannot be found, it will be created
    #Set environment here
    environment: 
      name: DEV
      url: ${{ env.DEV_URL }}
    steps:
      - run: echo "I am running job in DEV environment"
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Step that uses the DEV environment
        run: echo "Deployment to ${{ env.DEV_URL }} "
      
      - name: Step that uses the DEV config
        run: echo "Config is ${{ env.DEV_CONFIG }} "
      
      - name: Echo environment specific secrets
      # In real don't use sed
        run : echo ${{ secrets.CLIENT_SECRET }} | sed 's/./& /g'
      
      - name: Echo Repository secrets
        run : echo ${{ secrets.DB_PASS }} | sed 's/./& /g'

      ##we have this secret set under dev environment and repo secrets in settings with same name
      ## Secret under dev will have precedence
      - name: Echo same name seceret
        run : echo ${{ secrets.MY_SECRET }} | sed 's/./& /g'

      

  job2-PROD:
    runs-on: ubuntu-latest
    needs: job1-DEV
    # An environment can be specified per job
    # If the environment cannot be found, it will be created
    environment: 
      name: PROD
      url: ${{ env.PROD_URL }}
    steps:
      - run: echo "I am running job in PROD environment"

      - name: Checkout
        uses: actions/checkout@v2
      
      # Defined under env section
      - name: Step that uses the PROD environment
        run: echo "Deployment to ${{ env.PROD_URL }} "
      
      - name: Step that uses the PROD config
        run: echo "Config is ${{ env.PROD_CONFIG }} "
      
      - name: Echo environment specific secrets
        run : echo ${{ secrets.CLIENT_SECRET }} | sed 's/./& /g'
      
      - name: Echo Repository secrets
        run : echo ${{ secrets.DB_PASS }} | sed 's/./& /g'
      
      ##we have this secret set under dev environment and repo secrets in settings with same name
      ## Since this is prod env and it doesnt have override secret set up it will pick repo one
      - name: Echo same name secret 
        run : echo ${{ secrets.MY_SECRET }} | sed 's/./& /g'
          
